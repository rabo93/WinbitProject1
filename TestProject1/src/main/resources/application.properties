spring.application.name=TestProject1

# 서버 포트번호 변경
server.port=8080

# spring-boot-devtools 설정(프로젝트 내용 변경 시 ReBuild 서버 자동 재시작)
# 의존성 추가 시 자동으로 리로드 되긴 하지만 운영 서버등에서 명시적으로 꺼놓을 수 있음
# 따라서, 자동 리로드 필요할 경우 명시적으로 설정 추가하자!
spring.devtools.livereload.enabled=true
spring.devtools.restart.enabled=true


# 개발 시 변경 사항이 타임리프에 즉시 반영되도록 캐싱 기능 끄기(Cache 사용 중지)
# 주의! 개발 서버에서만 사용하고 운영 서버에서는 캐싱 기능을 사용하는 것이 성능상에 유리하다!
spring.thymeleaf.cache=false

# 클라이언트측의 요청에서 _method 파라미터값을 확인하고, 이를 해당하는 요청 메서드로 변환
# 주로, POST 방식 요청에서 지정하고 PUT 또는 DELETE 형식 요청 전송 시에 활용
#spring.mvc.hiddenmethod.filter.enabled=true

# -------------------------------------------------------------------------------------------
# [ MySQL 연동 설정 ]
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/testp1
spring.datasource.username=root
spring.datasource.password=1234

# MySQL 다이얼렉트 설정
# MySQL 특정 버전과 호환되는 SQL 문장을 생성할 수 있도록 도와줌
# 즉, 해당 버전에 맞게 추가된 기능이나 변경된 SQL 문법을 고려하여 하이버네이트가 생성하는 SQL 구문을 서포트
#spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# MyBatis Mapper XML 위치
#xml 위치 정보를 기록 -> /**/*. xml을 씀으로써 xml로 끝나는 파일은 모두 해당된다는 의미
mybatis.mapper-locations=classpath:mapper/*.xml
# DTO 클래스 경로 (resultType 줄일 때 사용됨)
mybatis.type-aliases-package=com.winbit.project1.dto
# DB의 snake_case 를 JAVA의 camelCase로 자동 매핑
mybatis.configuration.map-underscore-to-camel-case=true

# -------------------------------------------------------------------------------------------
# 날짜 포맷 설정
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss

# LocalDateTime을 timestamp가 아닌 문자열로 출력하도록 설정
spring.jackson.serialization.write-dates-as-timestamps=false




# -------------------------------------------------------------------------------------------
# 실행되는(JPA 를 통해 전송되는) 쿼리 확인(단순 나열)
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true

# JPA 데이터베이스 초기화 전략 설정
# none : 사용하지 않음(기본값) - 운영환경에서 가장 안전한 옵션
# create : 기존 테이블 삭제 후 테이블 생성(운영환경에서 사용 X)
# create-drop : 기존 테이블 삭제 후 테이블 생성(종료 시점에 테이블 삭제)(운영환경에서 사용 X)
# update : 변경된 스키마 적용(컬럼 추가만 반영, 컬럼 삭제 불가)(운영환경에서 사용 X)
# validate : 엔티티와 테이블에 대한 정상 매핑 확인 - 운영환경에서 추천되는 옵션
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.hibernate.ddl-auto=none
#spring.jpa.hibernate.ddl-auto=validate

# data.sql 파일을 통한 데이터 자동 삽입 설정
#spring.sql.init.mode=always
#spring.jpa.defer-datasource-initialization=true

# ==========================================================
# [ 파일 업로드 설정 ]
# 파일 한 개당 최대 사이즈
#spring.servlet.multipart.max-file-size=10MB
# 요청 하나 당 전체 파일 최대 사이즈
#spring.servlet.multipart.max-request-size=100MB
# 파일 업로드 경로(기본 경로와 상세 경로 구분)
#uploadBaseLocation=D:/shop
# => 아이티윌 서버 기준 /usr/local/tomcat
#itemImgLocation=/images/item
















